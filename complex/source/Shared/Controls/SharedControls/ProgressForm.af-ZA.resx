<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAIB8AAAEAIAAkEAAAFgAAACgAAAAgAAAAPgAAAAEAIAAAAAAA/A8AAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALySkNy8kpI0vJKTKLySk3S8k
        pOkvJKTrLySk6y8kpOovJKThLySk0C8kpKEvJKROLySkBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvJKQELySkSi8kpLgvJKT+LySk/y8k
        pP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKTRLySkaC8kpAwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALySkKy8kpMAvJKT/LySk/y8k
        pP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk4C8k
        pFMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAC8kpEMvJKTvLySk/y8k
        pP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8k
        pP8vJKT/LySk+y8kpGsvJKQBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAvJKRwLySk/y8k
        pP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8k
        pP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpKYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALySkQS8k
        pPsvJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8k
        pP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpG8AAAAAAAAAAAAAAAAAAAAAAAAAAC8k
        pCUvJKTqLySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk5y8kpKUvJKSMLySkiC8k
        pJsvJKTYLySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpGEAAAAAAAAAAAAA
        AAAAAAAALySkrS8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk4i8kpG4vJKQSAAAAAAAA
        AAAAAAAAAAAAAC8kpAQvJKRQLySk0S8kpP4vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk1y8k
        pAoAAAAAAAAAAC8kpD0vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpKEvJKQLAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALySkbS8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8k
        pP8vJKT/LySkdwAAAAAAAAAALySknS8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKStLySkAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALySkey8kpP8vJKT/LySk/y8k
        pP8vJKT/LySk/y8kpP8vJKTbLySkDy8kpB0vJKTvLySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk0y8k
        pA8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAALySkky8k
        pP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpP8vJKRdLySkYS8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8k
        pP8vJKRJAAAAAAAAAAAAAAAAAAAAAAAAAABsYEANbGBAPmxgQEdsYEAZAAAAAAAAAAAAAAAAAAAAAAAA
        AAAvJKQlLySk9i8kpP8vJKT/LySk/y8kpP8vJKT/LySk/y8kpKsvJKSlLySk/y8kpP8vJKT/LySk/y8k
        pP8vJKT/LySk2i8kpAcAAAAAAAAAAAAAAAAAAAAAbGBAJ2xgQNlsYED/bGBA/2xgQOxsYEBHAAAAAAAA
        AAAAAAAAAAAAAAAAAAAvJKS3LySk/y8kpP8vJKT/LySk/y8kpP8vJKT/LySk0y8kpJkvJKTKLySkwi8k
        pMIvJKTCLySkwi8kpMsvJKSOAAAAAAAAAAAAAAAAAAAAAGxgQAhsYEDBbGBA/2xgQP9sYED/bGBA/2xg
        QO1sYEAtAAAAAAAAAAAAAAAAAAAAAC8kpFcvJKTNLySkwi8kpMIvJKTCLySkwi8kpMcvJKSrKyCqAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbGBAUGxgQP9sYED/bGBA/2xg
        QP9sYED/bGBA/2xgQJYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsYEBibGBA/2xg
        QP9sYED/bGBA/2xgQP9sYED/bGBAqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAHBkOmhwZDp0cGQ6cnBkOnJwZDpycGQ6cnBkOnhwZDpNAAAAAAAAAAAAAAAAAAAAAGxg
        QClsYED3bGBA/2xgQP9sYED/bGBA/2xgQP9sYEBnAAAAAAAAAAAAAAAAAAAAAHBkOipwZDp4cGQ6cnBk
        OnJwZDpycGQ6cnBkOnRwZDpqbGBA0GxgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQMwAAAAAAAAAAAAA
        AAAAAAAAAAAAAGxgQG9sYED/bGBA/2xgQP9sYED/bGBAoGxgQAYAAAAAAAAAAAAAAAAAAAAAbGBAlmxg
        QP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQONsYECgbGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBA7Gxg
        QBcAAAAAAAAAAAAAAAAAAAAAAAAAAGxgQFNsYECybGBAvmxgQG9sYEACAAAAAAAAAAAAAAAAAAAAAGxg
        QAxsYEDebGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBAz2xgQFlsYED/bGBA/2xgQP9sYED/bGBA/2xg
        QP9sYED/bGBAhwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAbGBATWxgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQP9sYECjbGBAFGxgQOZsYED/bGBA/2xg
        QP9sYED/bGBA/2xgQP9sYED+bGBASQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGxgQBZsYEDabGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQE8AAAAAbGBAiGxg
        QP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQP9sYEDjbGBAMgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAABsYEAXbGBAw2xgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQP9sYEDKbGBABQAA
        AABsYEAubGBA/GxgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQP9sYEDtbGBAUwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAbGBALWxgQMlsYED/bGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xg
        QFsAAAAAAAAAAAAAAABsYECUbGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQP9sYED7bGBAtGxg
        QGtsYEAjbGBAC2xgQAhsYEAabGBAWGxgQKNsYED1bGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xg
        QP9sYEDEbGBAAQAAAAAAAAAAAAAAAGxgQA1sYEDLbGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xg
        QP9sYED/bGBA/2xgQPdsYEDhbGBA3WxgQPFsYED/bGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xg
        QP9sYED/bGBA9mxgQDoAAAAAAAAAAAAAAAAAAAAAAAAAAGxgQCNsYEDnbGBA/2xgQP9sYED/bGBA/2xg
        QP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xg
        QP9sYED/bGBA/2xgQPZsYEBDAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGxgQDtsYEDnbGBA/2xg
        QP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xg
        QP9sYED/bGBA/2xgQP9sYED+bGBAcgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGxg
        QB1sYEDEbGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xg
        QP9sYED/bGBA/2xgQP9sYED/bGBA4WxgQDYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAGxgQAdsYEB+bGBA+mxgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQP9sYED/bGBA/2xg
        QP9sYED/bGBA/2xgQP9sYED/bGBA/2xgQKVsYEAeAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABsYEAgbGBAb2xgQNlsYED/bGBA/2xgQP9sYED/bGBA/2xg
        QP9sYED/bGBA/2xgQP9sYED/bGBA6WxgQIlsYEAxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAbGBACGxgQEFsYECObGBAvmxg
        QN1sYEDobGBA6WxgQOFsYEDIbGBAnGxgQFNsYEAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAP/AAf/+AAB//AAAP/gAAA/wAAAP4AAAB8AAAAPAA8ABgA/4AYAf/AAAP/4AAHw+AAB4
        HwAA8A8Af/AP///wD/8A8A8AAPgPAAB8HgAAf/4AAD/8AIAf+ACAD/ABwAAAAcAAAAPgAAAH8AAAD/gA
        AB/8AAA//wAA///AA/8=
</value>
  </data>
</root>