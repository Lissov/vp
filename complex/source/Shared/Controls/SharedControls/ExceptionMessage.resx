<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="ErrorImagePictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BwAAAABJRU5ErkJggg==
</value>
  </data>
</root>